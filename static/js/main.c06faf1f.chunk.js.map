{"version":3,"sources":["useSolarized.js","ModeButton.js","data.js","App.js","serviceWorker.js","index.js"],"names":["c","useSolarized","useState","lightMode","setLightMode","colors","setColors","useEffect","cols","0","1","2","3","4","5","6","7","background","text","ModeButton","theme","onClick","style","color","backgroundColor","border","borderRadius","outline","fontSize","padding","margin","index","days","easy","medium","hard","weekToDays","week","scaleY","map","day","i","transform","className","reduce","prev","curr","length","reverse","v","width","y","x","height","fill","strokeWidth","stroke","dayToBars","textAnchor","App","scaleLinear","domain","range","useResizeObserver","ref","canvasWidth","canvasHeight","transition","viewBox","n","x1","x2","y1","y2","opacity","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAEMA,EACG,CAAC,UAAW,UAAW,UAAW,WADrCA,EAEE,CAAC,UAAW,UAAW,UAAW,WAFpCA,EAGI,UAHJA,EAII,UAJJA,EAKC,UALDA,EAMK,UANLA,EAOI,UAPJA,EAQE,UARFA,EASE,UATFA,EAUG,UA+BMC,EA5BM,WAAO,IAAD,EACSC,oBAAS,GADlB,mBAClBC,EADkB,KACPC,EADO,OAEGF,mBAAS,IAFZ,mBAElBG,EAFkB,KAEVC,EAFU,KAyBzB,OAtBAC,qBAAU,WACR,IAAMC,EAAO,CACXC,EAAGT,EACHU,EAAGV,EACHW,EAAGX,EACHY,EAAGZ,EACHa,EAAGb,EACHc,EAAGd,EACHe,EAAGf,EACHgB,EAAGhB,GAEDG,GACFK,EAAKS,WAAajB,EAAQ,GAC1BQ,EAAKU,KAAOlB,EAAO,GACnBQ,EAAK,GAAOR,EAAO,KAEnBQ,EAAKS,WAAajB,EAAO,GACzBQ,EAAKU,KAAOlB,EAAQ,GACpBQ,EAAK,GAAOR,EAAQ,IAEtBM,EAAUE,KACT,CAACL,IACG,CAACE,EAAQF,EAAWC,ICpBde,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACjB,4BACEC,MAAO,CACLC,MAAOH,EAAMH,WACbO,gBAAiBJ,EAAMF,KACvBO,OAAO,aAAD,OAAeL,EAAM,IAC3BM,aAAc,GACdC,QAAS,OACTC,SAAU,SACVC,QAAS,eACTC,OAAQ,UAEVT,QAASA,GAXX,SCHa,G,MAAA,CACb,CACEU,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrBC,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,IAEvB,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrBC,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,KAEvB,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,EAAG,GAAI,EAAG,EAAG,IACtBC,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,OAI3B,CACEJ,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,EAAG,GAAI,EAAG,EAAG,IACtBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,GAAI,GAAI,EAAG,EAAG,IACvBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAI7B,CACEJ,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,GACrBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,IACrBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,EAAG,EAAG,IACrBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAI7B,CACEJ,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAI7B,CACEJ,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAClCC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrCC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAErC,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnCC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrCC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIzC,CACEJ,MAAO,EACPC,KAAM,CACJ,CACEC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvCC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEzC,CACEF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvCC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,SC5DzCC,EAAa,SAACC,EAAMC,EAAQlB,GAChC,OACE,oCACGiB,EAAKL,KAAKO,KAAI,SAACC,EAAKC,GAAN,OACb,uBAAGnB,MAAO,CAAEoB,UAAU,cAAD,OAAoB,EAAJD,EAAhB,QAA8BE,UAAU,QArDnD,SAACH,EAAKF,EAAQlB,GAC9B,OACE,oCACGoB,EAAIP,KACFW,QAAO,SAACC,EAAMC,GAAP,4BAAoBD,GAApB,CAA0BA,EAAKA,EAAKE,OAAS,GAAKD,MAAO,CAAC,IACjEE,UACAT,KAAI,SAACU,EAAGR,GAAJ,OACH,0BACES,MAAM,IACNC,EAAGb,EAAOW,GACVG,EAAE,IACFC,OAAQ,GAAKf,EAAOW,GACpBK,KAAMlC,EAAMqB,GACZc,YAAY,MACZC,OAAQpC,EAAMF,UAGnBsB,EAAIN,OACFU,QAAO,SAACC,EAAMC,GAAP,4BAAoBD,GAApB,CAA0BA,EAAKA,EAAKE,OAAS,GAAKD,MAAO,CAAC,IACjEE,UACAT,KAAI,SAACU,EAAGR,GAAJ,OACH,0BACES,MAAM,IACNC,EAAGb,EAAOW,GACVG,EAAE,IACFC,OAAQ,GAAKf,EAAOW,GACpBK,KAAMlC,EAAMqB,GACZc,YAAY,MACZC,OAAQpC,EAAMF,UAGnBsB,EAAIL,KACFS,QAAO,SAACC,EAAMC,GAAP,4BAAoBD,GAApB,CAA0BA,EAAKA,EAAKE,OAAS,GAAKD,MAAO,CAAC,IACjEE,UACAT,KAAI,SAACU,EAAGR,GAAJ,OACH,0BACES,MAAM,IACNC,EAAGb,EAAOW,GACVG,EAAE,IACFC,OAAQ,GAAKf,EAAOW,GACpBK,KAAMlC,EAAMqB,GACZc,YAAY,MACZC,OAAQpC,EAAMF,WAYfuC,CAAUjB,EAAKF,EAAQlB,GACxB,0BACEE,MAAO,CAAEM,SAAU,GACnBwB,EAAE,IACFD,EAAGb,GAAQ,IACXoB,WAAW,SACXJ,KAAMlC,EAAMF,MALd,OAOOuB,EAAI,OAIf,0BACEnB,MAAO,CAAEM,SAAU,GACnBwB,EAAE,KACFD,EAAGb,GAAQ,IACXoB,WAAW,SACXJ,KAAMlC,EAAMF,MALd,QAOQmB,EAAKN,SA+DJ4B,MAzDf,WAAgB,IAAD,EAC4B1D,IAD5B,mBACNmB,EADM,KACCjB,EADD,KACYC,EADZ,KAEPkC,EAASsB,cAAcC,OAAO,CAAC,EAAG,MAAMC,MAAM,CAAC,GAAI,KAF5C,EAGUC,cAAfC,EAHK,EAGLA,IAAKd,EAHA,EAGAA,MACPe,EAAcf,EAAQ,IAAMA,EAAQ,GAAK,IACzCgB,KAAkBD,EAAc,GAEtC,OACE,yBACED,IAAKA,EACLrB,UAAU,MACVrB,MAAO,CACLC,MAAOH,EAAMF,KACbM,gBAAiBJ,EAAMH,WACvBkD,WAAY,uCAGd,yBACEjB,MAAOe,EACPZ,OAAQa,EACRE,QAAQ,cACRzB,UAAU,SAET,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,KAAKJ,KAAI,SAAC8B,GAAD,OAC/B,uBAAG3B,UAAS,sBAAiBJ,EAAO+B,GAAxB,MACV,0BACE/C,MAAO,CAAEM,SAAU,EAAG8B,WAAY,OAClCN,EAAE,IACFD,EAAE,IACFG,KAAMlC,EAAMF,MAEXmD,GAEH,0BACEC,GAAG,KACHC,GAAG,MACHC,GAAI,EACJC,GAAI,EACJjB,OAAQpC,EAAMF,KACdqC,YAAY,OACZjC,MAAO,CAAEoD,QAAS,UAIxB,uBAAGpD,MAAO,CAAEoB,UAAW,qBACpBiC,EAAKpC,KAAI,SAACF,GAAD,OACR,uBAAGf,MAAO,CAAEoB,UAAU,cAAD,OAAmC,IAAlBL,EAAKN,MAAQ,GAA9B,SAClBK,EAAWC,EAAMC,EAAQlB,SAKlC,kBAAC,EAAD,CAAYA,MAAOA,EAAOC,QAAS,kBAAMjB,GAAcD,QC/HzCyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c06faf1f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst c = {\n  light: [\"#fdf6e3\", \"#eee8d5\", \"#93a1a1\", \"#839496\"],\n  dark: [\"#002b36\", \"#073642\", \"#586e75\", \"#657b83\"],\n  yellow: \"#b58900\",\n  orange: \"#cb4b16\",\n  red: \"#dc322f\",\n  magenta: \"#d33682\",\n  violet: \"#6c71c4\",\n  blue: \"#268bd2\",\n  cyan: \"#2aa198\",\n  green: \"#859900\",\n};\n\nconst useSolarized = () => {\n  const [lightMode, setLightMode] = useState(true);\n  const [colors, setColors] = useState({});\n  useEffect(() => {\n    const cols = {\n      0: c.yellow,\n      1: c.orange,\n      2: c.red,\n      3: c.magenta,\n      4: c.violet,\n      5: c.blue,\n      6: c.cyan,\n      7: c.green,\n    };\n    if (lightMode) {\n      cols.background = c.light[0];\n      cols.text = c.dark[1];\n      cols[\"8\"] = c.dark[0];\n    } else {\n      cols.background = c.dark[0];\n      cols.text = c.light[1];\n      cols[\"8\"] = c.light[0];\n    }\n    setColors(cols);\n  }, [lightMode]);\n  return [colors, lightMode, setLightMode];\n};\n\nexport default useSolarized;\n","import React from \"react\";\n\nconst ModeButton = ({ theme, onClick }) => (\n  <button\n    style={{\n      color: theme.background,\n      backgroundColor: theme.text,\n      border: `2px solid ${theme[8]}`,\n      borderRadius: 50,\n      outline: \"none\",\n      fontSize: \"1.5rem\",\n      padding: \"0.25rem 1rem\",\n      margin: \"1rem 0\",\n    }}\n    onClick={onClick}\n  >\n    MODE\n  </button>\n);\n\nexport default ModeButton;\n","export default [\n  {\n    index: 1,\n    days: [\n      {\n        easy: [2, 3, 2, 2, 3],\n        medium: [6, 6, 4, 4, 5],\n        hard: [10, 12, 7, 7, 9],\n      },\n      {\n        easy: [3, 4, 2, 3, 4],\n        medium: [6, 8, 6, 6, 7],\n        hard: [10, 12, 8, 8, 12],\n      },\n      {\n        easy: [4, 5, 4, 4, 5],\n        medium: [8, 10, 7, 7, 10],\n        hard: [11, 15, 9, 9, 13],\n      },\n    ],\n  },\n  {\n    index: 2,\n    days: [\n      {\n        easy: [4, 5, 4, 4, 6],\n        medium: [9, 11, 8, 8, 11],\n        hard: [14, 14, 10, 10, 15],\n      },\n      {\n        easy: [5, 6, 4, 4, 7],\n        medium: [10, 12, 9, 9, 13],\n        hard: [14, 16, 12, 12, 17],\n      },\n      {\n        easy: [5, 7, 5, 5, 8],\n        medium: [12, 13, 10, 10, 15],\n        hard: [16, 17, 14, 14, 20],\n      },\n    ],\n  },\n  {\n    index: 3,\n    days: [\n      {\n        easy: [10, 12, 7, 7, 9],\n        medium: [12, 17, 13, 13, 17],\n        hard: [14, 18, 14, 14, 18],\n      },\n      {\n        easy: [10, 12, 8, 8, 12],\n        medium: [14, 19, 14, 14, 19],\n        hard: [20, 25, 15, 15, 25],\n      },\n      {\n        easy: [11, 13, 9, 9, 13],\n        medium: [16, 21, 15, 15, 21],\n        hard: [22, 30, 20, 20, 28],\n      },\n    ],\n  },\n  {\n    index: 4,\n    days: [\n      {\n        easy: [12, 14, 11, 10, 16],\n        medium: [18, 22, 16, 16, 25],\n        hard: [21, 25, 21, 21, 32],\n      },\n      {\n        easy: [14, 16, 12, 12, 18],\n        medium: [20, 25, 20, 20, 28],\n        hard: [25, 29, 25, 25, 36],\n      },\n      {\n        easy: [16, 18, 13, 13, 20],\n        medium: [23, 28, 23, 23, 33],\n        hard: [29, 33, 29, 29, 40],\n      },\n    ],\n  },\n  {\n    index: 5,\n    days: [\n      {\n        easy: [17, 19, 15, 15, 20],\n        medium: [28, 35, 25, 22, 35],\n        hard: [36, 40, 30, 24, 40],\n      },\n      {\n        easy: [10, 10, 13, 13, 10, 10, 9, 25],\n        medium: [18, 18, 20, 20, 14, 14, 16, 40],\n        hard: [19, 19, 22, 22, 18, 18, 22, 45],\n      },\n      {\n        easy: [13, 13, 15, 15, 12, 12, 10, 30],\n        medium: [18, 18, 20, 20, 17, 17, 20, 45],\n        hard: [20, 20, 24, 24, 20, 20, 22, 50],\n      },\n    ],\n  },\n  {\n    index: 6,\n    days: [\n      {\n        easy: [25, 30, 20, 15, 40],\n        medium: [40, 50, 25, 25, 50],\n        hard: [45, 55, 35, 30, 55],\n      },\n      {\n        easy: [14, 14, 15, 15, 14, 14, 10, 10, 44],\n        medium: [20, 20, 23, 23, 20, 20, 18, 18, 53],\n        hard: [22, 22, 30, 30, 24, 24, 18, 18, 58],\n      },\n      {\n        easy: [13, 13, 17, 17, 16, 16, 14, 14, 50],\n        medium: [22, 22, 30, 30, 25, 25, 18, 18, 55],\n        hard: [26, 26, 33, 33, 26, 26, 22, 22, 60],\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport useResizeObserver from \"use-resize-observer\";\nimport useSolarized from \"./useSolarized\";\nimport ModeButton from \"./ModeButton\";\nimport \"./App.css\";\nimport data from \"./data\";\n\nconst dayToBars = (day, scaleY, theme) => {\n  return (\n    <>\n      {day.easy\n        .reduce((prev, curr) => [...prev, prev[prev.length - 1] + curr], [0])\n        .reverse()\n        .map((v, i) => (\n          <rect\n            width=\"2\"\n            y={scaleY(v)}\n            x=\"0\"\n            height={90 - scaleY(v)}\n            fill={theme[i]}\n            strokeWidth=\"0.5\"\n            stroke={theme.text}\n          />\n        ))}\n      {day.medium\n        .reduce((prev, curr) => [...prev, prev[prev.length - 1] + curr], [0])\n        .reverse()\n        .map((v, i) => (\n          <rect\n            width=\"2\"\n            y={scaleY(v)}\n            x=\"2\"\n            height={90 - scaleY(v)}\n            fill={theme[i]}\n            strokeWidth=\"0.5\"\n            stroke={theme.text}\n          />\n        ))}\n      {day.hard\n        .reduce((prev, curr) => [...prev, prev[prev.length - 1] + curr], [0])\n        .reverse()\n        .map((v, i) => (\n          <rect\n            width=\"2\"\n            y={scaleY(v)}\n            x=\"4\"\n            height={90 - scaleY(v)}\n            fill={theme[i]}\n            strokeWidth=\"0.5\"\n            stroke={theme.text}\n          />\n        ))}\n    </>\n  );\n};\n\nconst weekToDays = (week, scaleY, theme) => {\n  return (\n    <>\n      {week.days.map((day, i) => (\n        <g style={{ transform: `translateX(${i * 8}px)` }} className=\"week\">\n          {dayToBars(day, scaleY, theme)}\n          <text\n            style={{ fontSize: 2 }}\n            x=\"3\"\n            y={scaleY(-10)}\n            textAnchor=\"middle\"\n            fill={theme.text}\n          >\n            Day {i + 1}\n          </text>\n        </g>\n      ))}\n      <text\n        style={{ fontSize: 4 }}\n        x=\"11\"\n        y={scaleY(-24)}\n        textAnchor=\"middle\"\n        fill={theme.text}\n      >\n        Week {week.index}\n      </text>\n    </>\n  );\n};\n\nfunction App() {\n  const [theme, lightMode, setLightMode] = useSolarized();\n  const scaleY = scaleLinear().domain([0, 260]).range([90, 10]);\n  const { ref, width } = useResizeObserver();\n  const canvasWidth = width < 840 ? width - 40 : 800;\n  const canvasHeight = ~~(canvasWidth / 2);\n\n  return (\n    <div\n      ref={ref}\n      className=\"App\"\n      style={{\n        color: theme.text,\n        backgroundColor: theme.background,\n        transition: \"background-color 0.5s, color 0.25s\",\n      }}\n    >\n      <svg\n        width={canvasWidth}\n        height={canvasHeight}\n        viewBox=\"0 0 200 100\"\n        className=\"graph\"\n      >\n        {[0, 50, 100, 150, 200, 250].map((n) => (\n          <g transform={`translate(0 ${scaleY(n)})`}>\n            <text\n              style={{ fontSize: 4, textAnchor: \"end\" }}\n              x=\"9\"\n              y=\"1\"\n              fill={theme.text}\n            >\n              {n}\n            </text>\n            <line\n              x1=\"10\"\n              x2=\"190\"\n              y1={0}\n              y2={0}\n              stroke={theme.text}\n              strokeWidth=\"0.25\"\n              style={{ opacity: 0.5 }}\n            />\n          </g>\n        ))}\n        <g style={{ transform: \"translateX(14px)\" }}>\n          {data.map((week) => (\n            <g style={{ transform: `translateX(${(week.index - 1) * 30}px)` }}>\n              {weekToDays(week, scaleY, theme)}\n            </g>\n          ))}\n        </g>\n      </svg>\n      <ModeButton theme={theme} onClick={() => setLightMode(!lightMode)} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}